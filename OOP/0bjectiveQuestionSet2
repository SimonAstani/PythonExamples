1. What is the output of the following code?

class change:
    def __init__(self, x, y, z):
        self.a = x + y + z

x = change(1,2,3)
y = getattr(x, 'a')
setattr(x, 'a', y+1)
print(x.a)
a)	6
b)	7
c)	Error
d)	0

[Answer: b
Explanation: First, a=1+2+3=6. Then, after setattr() is invoked, x.a=6+1=7.]

2.	What is the output of the following code?

class test:
     def __init__(self,a):
         self.a=a

     def display(self):
         print(self.a)
obj=test()
obj.display()
a)	Runs normally, doesn’t display anything
b)	Displays 0, which is the automatic default value
c)	Error as one argument is required while creating the object
d)	Error as display function requires additional argument

[Answer: c
Explanation: Since, the __init__ special method has another argument a other than self,
during object creation, one argument is required. For example: obj=test(“Hello”)]


3.What is the output of the following code?

class fruits:
    def __init__(self, price):
        self.price = price
obj=fruits(50)

obj.quantity=10
obj.bags=2

print(obj.quantity+len(obj.__dict__))


a)	12
b)	52
c)	13
d)	60
View Answer

Answer: c
Explanation: In the above code, obj.quantity has been initialised to 10. There are a total of three items in the dictionary, price,
 quantity and bags. Hence, len(obj.__dict__) is 3.

4. Suppose list1 is [1, 3, 2], What is list1 * 2 ?
a) [2, 6, 4].
b) [1, 3, 2, 1, 3].
c) [1, 3, 2, 1, 3, 2] .
D) [1, 3, 2, 3, 2, 1].


Answer: c
Explanation: Execute in the shell and verify.

5. What will be the output?

values = [[3, 4, 5, 1], [33, 6, 1, 2]]

v = values[0][0]
for lst in values:
    for element in lst:
        if v > element:
            v = element

print(v)
a) 1
b) 3
c) 5
d) 6

Answer: a
Explanation: Execute in the shell to verify.

6.	What is the output of the following code?

a={1:"A",2:"B",3:"C"}
for i,j in a.items():
    print(i,j,end=" ")
a)	1 A 2 B 3 C
b)	1 2 3
c)	A B C
d)	1:”A” 2:”B” 3:”C”

Answer: a
Explanation: In the above code, variables i and j iterate over the keys and values of the dictionary respectively.

7.	What is the output of the following code?

a={1:"A",2:"B",3:"C"}
b={4:"D",5:"E"}
a.update(b)
print(a)
a)	{1: ‘A’, 2: ‘B’, 3: ‘C’}
b)	Method update() doesn’t exist for dictionaries
c)	{1: ‘A’, 2: ‘B’, 3: ‘C’, 4: ‘D’, 5: ‘E’}
d)	{4: ‘D’, 5: ‘E’}

Answer: c
Explanation: update() method adds dictionary b’s key-value pairs to dictionary a. Execute in python shell to verify.

8. What is the output of the code shown?

l=[1,2,3,4,5]
[x&1 for x in l]
a) [1, 1, 1, 1, 1]
b) [1, 0, 1, 0, 1]
c) [1, 0, 0, 0, 0]
d) [0, 1, 0, 1, 0]

Answer: b
Explanation: In the code shown above, each of the numbers of the list, that is, 1, 2, 3, 4 and 5 are AND-ed with 1 and the result is printed in the form of a list. Hence the output is [1, 0, 1, 0, 1].
